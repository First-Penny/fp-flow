import{Node}from"./node.js";class FPFlow{canvasStartX=0;canvasStartY=0;canvasTranslateX=0;canvasTranslateY=0;canvas=null;canvasEl=null;lastScale=1;lastZoomDirection=null;zoomTollerance={min:1,max:3};zoomScale=.05;isDragging=!1;maxTranslateXAllowed=0;maxTranslateYAllowed=0;ctx=null;nodes=[];isNodeDragging=!1;strokeColor="white";strokeWidth=1;constructor(){var a=document.querySelector(".fp-scroll-container");this.canvas=document.createElement("div"),this.canvas.id="canvas",this.canvas.classList.add("flow-container"),a.appendChild(this.canvas),this.canvasEl=document.createElement("canvas"),this.canvasEl.id="lineCanvas",this.canvasEl.classList.add("line-canvas"),this.canvas.appendChild(this.canvasEl),this.canvasEl.width=canvas.offsetWidth,this.canvasEl.height=canvas.offsetHeight,this.ctx=this.canvasEl.getContext("2d"),this.init()}drawLine(a,s,t,e){this.ctx.beginPath(),this.ctx.moveTo(a,s),this.ctx.lineTo(t,e),this.ctx.strokeStyle=this.strokeColor,this.ctx.lineWidth=this.strokeWidth/this.lastScale,this.ctx.stroke()}refreshCanvas(){this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height);const i=[];this.nodes.forEach(n=>{n.connectedNodes.forEach(s=>{var a=n,t=this.nodes.find(a=>a.id===s),e=a.id>t.id?t.id+"-"+a.id:a.id+"-"+t.id;i.includes(e)||(this.drawLine(a.centerX,a.centerY,t.centerX,t.centerY),i.push(e))})})}addNode(a){var s=this.nodes.length,s=new Node(a,s);return this.canvas.appendChild(a),a.style.transform=`scale(${1/this.lastScale})`,this.nodes.push(s),s.onNodeMoveStart(a=>{this.isNodeDragging=!0}),s.onNodeMove((a,s)=>{this.refreshCanvas()}),s.onNodeMoveEnd(a=>{this.isNodeDragging=!1}),s}removeNode(s){this.nodes.find(a=>a.id===s).element.remove(),this.nodes=this.nodes.filter(a=>a.id!==s),this.nodes.forEach(a=>{a.connectedNodes=a.connectedNodes.filter(a=>a!==s)}),this.refreshCanvas()}addConnection(s,t){s=parseInt(s),t=parseInt(t);var a=this.nodes.find(a=>a.id===s),e=this.nodes.find(a=>a.id===t);a.connectedNodes.includes(t)||e.connectedNodes.includes(s)||(a.connectedNodes.push(t),e.connectedNodes.push(s)),this.refreshCanvas()}removeConnection(s,t){s=parseInt(s),t=parseInt(t);var a=this.nodes.find(a=>a.id===s),e=this.nodes.find(a=>a.id===t);a.connectedNodes=a.connectedNodes.filter(a=>a!==t),e.connectedNodes=e.connectedNodes.filter(a=>a!==s),this.refreshCanvas()}init(){this.canvas.addEventListener("mousedown",a=>{this.isNodeDragging||(this.canvas.style.cursor="grabbing",this.canvasStartX=a.clientX,this.canvasStartY=a.clientY,this.isDragging=!0)}),this.canvas.addEventListener("mousemove",a=>{var s,t,e;a.preventDefault(),this.isDragging&&!this.isNodeDragging&&(s=a.clientX,a=a.clientY,t=s-this.canvasStartX,e=a-this.canvasStartY,this.canvasTranslateX+=t,this.canvasTranslateY+=e,this.canvasStartX=s,this.canvasStartY=a,this.canvasTranslateX>this.maxTranslateXAllowed&&(this.canvasTranslateX=this.maxTranslateXAllowed),this.canvasTranslateX<-this.maxTranslateXAllowed&&(this.canvasTranslateX=-this.maxTranslateXAllowed),this.canvasTranslateY>this.maxTranslateYAllowed&&(this.canvasTranslateY=this.maxTranslateYAllowed),this.canvasTranslateY<-this.maxTranslateYAllowed&&(this.canvasTranslateY=-this.maxTranslateYAllowed),this.canvas.style.transform=`translate(${this.canvasTranslateX}px, ${this.canvasTranslateY}px) scale(${this.lastScale})`)}),this.canvas.addEventListener("mouseup",a=>{this.canvas.style.cursor="initial",this.isDragging=!1}),this.canvas.addEventListener("wheel",a=>{a.preventDefault(),a.ctrlKey&&(a=0<a.wheelDelta/120?"zoomout":"zoomin","zoomout"===this.lastZoomDirection&&"zoomout"==a&&this.lastScale>=this.zoomTollerance.max||"zoomin"===this.lastZoomDirection&&"zoomin"==a&&this.lastScale<=this.zoomTollerance.min||(this.lastScale+="zoomout"==a?this.zoomScale:-1*this.zoomScale,this.lastZoomDirection=a,this.maxTranslateXAllowed=(this.canvas.offsetWidth*this.lastScale-this.canvas.offsetWidth)/2,this.maxTranslateYAllowed=(this.canvas.offsetHeight*this.lastScale-this.canvas.offsetHeight)/2,this.lastScale<1&&(this.lastScale=1),this.nodes.forEach(a=>{a.element.style.transform=`scale(${1/this.lastScale})`,a.canvasScale=this.lastScale,a.setCenter()}),this.canvas.style.transform=`scale(${this.lastScale})`,this.refreshCanvas()))})}getRenditionInfo(){var a={nodes:this.nodes,canvasTranslateX:this.canvasTranslateX,canvasTranslateY:this.canvasTranslateY,lastScale:this.lastScale,canvasStartX:this.canvasStartX,canvasStartY:this.canvasStartY,canvasTranslateX:this.canvasTranslateX,canvasTranslateY:this.canvasTranslateY,lastScale:this.lastScale,isDragging:this.isDragging,nodes:this.nodes,strokeColor:this.strokeColor,strokeWidth:this.strokeWidth};return a.nodes.map(a=>({startX:a.startX,startY:a.startY,centerX:a.centerX,centerY:a.centerY,data:a.data,id:a.id,connectedNodes:a.connectedNodes,canvasScale:a.canvasScale})),a}renderSavedFlow(a){this.canvasTranslateX=a.canvasTranslateX,this.canvasTranslateY=a.canvasTranslateY,this.lastScale=a.lastScale,this.canvasStartX=a.canvasStartX,this.canvasStartY=a.canvasStartY,this.canvasTranslateX=a.canvasTranslateX,this.canvasTranslateY=a.canvasTranslateY,this.lastScale=a.lastScale,this.isDragging=a.isDragging,this.nodes=a.nodes,this.strokeColor=a.strokeColor,this.strokeWidth=a.strokeWidth,this.nodes.forEach(a=>{var s=document.createElement("div");s.style.left=a.centerX+"px",s.style.top=a.centerY+"px",s.classList.add("node"),s.id="fpfn - "+a.id,this.canvas.appendChild(s),a.element=s,a.canvasScale=this.lastScale,a.setCenter(),a.onNodeMoveStart(a=>{this.isNodeDragging=!0}),a.onNodeMove((a,s)=>{this.refreshCanvas()}),a.onNodeMoveEnd(a=>{this.isNodeDragging=!1})}),this.refreshCanvas()}}window.FPFlow=FPFlow;export{FPFlow};